c
q
c
fg
c
 @_purchases.count
 @_purchases.coun
@_purchases.count
@_purchases
@_purchaeses
@_purchaes
c
@purchaes
@counter
n
@counter
@counnter
continue
c
@purchases
n
@purchases.count
@percent
@purchases
n
continue
c
@total
n
@promotions.count
@promotions
continue
c
p.price - ((@percent.to_f / 100) * p.price
p.price
c
@purchases
@counter
c
@counter
@couter
@counnter
counter
@purchases.count
c
@purchases.count
@purchases
@purchaes
@counter
n
@counter
c
n
exception
n
nn
n
nn
n
@counter
c
n
@counter
c
@counter
continue
c
@purchases
@percent
@discount
@price
n
p.price - ((@percent.to_f / 100) * p.price)
p.price - ((@percent.to_f / 100) * p.price
c
@percent
@purchases
@purchaes
n
nn
@purchases
continue
c
20 - @percent.to_f/100 * @purchases.first.price
@percent.to_f/100 * @purchases.first.price
@percent.to_f/100
@percent/100
@percent
@purchases.first.price
@purchases.first
@purchases
continue
c
@purchases
@purchase
c
cs
cf
@purchases
c
@price
@purchases
@purchses
@purchaes
continue
c
exception
n
c
@purchases >= @products.count
@purchases
@purchase
@products.count
@products
products
c
n
continue
q
c
super
c
super(Checkout.new)
super(order)
super
c
q
c
super
order = Checkout.new
order
super(Checkout.new)
super(order)
super
c
q
fg
q
c
fg
c
order.is_a?(Order)
order.is_a?(Order
c
super
c
eligible?(order)
q
c
order.is_a?(Order)
order
order.is_a?(Order
eligible?(order)
eligible?(order
super
q
c
order
c
order
c
super
super()
super
c
Dir[File.expand_path("../lib/**/*.rb", __FILE__)]c
Dir[File.expand_path("../lib/**/*.rb", __FILE__)]
File.expand_path("../lib/**/*.rb", __FILE__)
File.expand_path("./lib/**/*.rb", __FILE__)
File.expand_path("lib/**/*.rb", __FILE__)
File.expand_path('../../Gemfile', __FILE__)
Dir["../lib/*.rb"]
Dir["../../lib/**/*.rb"]
Dir["../lib/**/*.rb"]
Dir["/lib/**/*.rb"]
Dir["../lib/**/*.rb"]
c
@promotions.first.perform(self)
@promotions.first
promotion.perform(self)
@promotions
n
q
c
q
y
q
c
items.select { |i| i.code == "002" }.size
items.select { |i| i.code == "002" }.sie
items.select { |i| i.code == "002" }
items.select { |i| i.code == "002" }.count > 2
continue
c
continue
c
d
10.to_f / 100
10 / 100
10 // 100
10 / 100
10
(10/100).to_f
10/100
((10/100) * total)
total - ((10/100) * total)
total
n
continue
c
continue
c
rule.call(items, @total)
@total > 30
@total
continue
c
31.34 > 30
rule.call(items, @total)
@total
c
rule.call(items, @total) || 0
rule.call(items, @total)
rule
continue
